{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-home-runner-work-spelkington-github-io-spelkington-github-io-content-blog-hello-blog-index-mdx-fd448ab009e659d52ba9.js","mappings":"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","sources":["webpack://chaotic-good-software-blog/./content/blog/hello-blog/index.mdx","webpack://chaotic-good-software-blog/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\",\n    img: \"img\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Look at that - a whole blog, just for me! At this rate, the last thing I need to do to be a \", React.createElement(_components.em, null, \"real\"), \" tech guru is start a podcast.\"), \"\\n\", React.createElement(_components.p, null, \"I’m starting this page as a place to talk about my cool projects, dumb thoughts, and other odds-and-ends aspects about my life and work.\"), \"\\n\", React.createElement(_components.p, null, \"To set the tone, here’s a quick code function to find \", React.createElement(_components.a, {\n    href: \"https://xkcd.com/2435/\"\n  }, \"the geomethic meandian\"), \" of a set of numbers in Python - in case the need ever arises.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://imgs.xkcd.com/comics/geothmetic_meandian.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-py\"\n  }, \"import numpy as np\\n\\ndef geothmetic_meandian(\\n    numbers: np.array,\\n    error: float = 10e-5\\n):\\n    '''Find the geothmetic meandian of a set of numbers.'''\\n\\n    # If all the numbers are close to the same, return the first number\\n    if sum(np.abs(numbers - numbers[0])) < error:\\n        return numbers[0]\\n    else:\\n        # Recursively call the geomethic meandian until the numbers converge\\n        return geothmetic_meandian(np.array([\\n            np.average(numbers),\\n            np.product(np.power(numbers, 1 / len(numbers))),\\n            np.median(numbers)\\n        ]), error)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \">>> geothmetic_meandian([1, 1, 2, 3, 5])\\n2.089\\n\")), \"\\n\", React.createElement(_components.p, null, \"Voila!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/spelkington.github.io/spelkington.github.io/content/blog/hello-blog/index.mdx\";\nimport * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport MuiMarkdown from \"mui-markdown\";\nimport TagChips from \"../components/site/tagchips\";\nimport Layout from \"../components/site/layout\";\nimport Seo from \"../components/site/seo\";\nconst BlogPostTemplate = _ref => {\n  var _data$site$siteMetada;\n  let {data, location} = _ref;\n  const post = data.mdx;\n  const siteTitle = ((_data$site$siteMetada = data.site.siteMetadata) === null || _data$site$siteMetada === void 0 ? void 0 : _data$site$siteMetada.title) || \"Title\";\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    textAlign: \"center\"\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    marginBottom: \"2rem\"\n  }, post.frontmatter.date), React.createElement(TagChips, {\n    tags: post.frontmatter.public_tags\n  }))), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    marginTop: 3\n  }, React.createElement(MuiMarkdown, {\n    overrides: {\n      h1: {\n        component: Typography,\n        props: {\n          variant: \"h3\"\n        }\n      },\n      h2: {\n        component: Typography,\n        props: {\n          variant: \"h4\"\n        }\n      },\n      h3: {\n        component: Typography,\n        props: {\n          variant: \"h5\"\n        }\n      },\n      p: {\n        component: Typography,\n        props: {\n          variant: \"body1\",\n          gutterBottom: false\n        }\n      }\n    }\n  }, post.body)))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  const post = data.mdx;\n  let seoDescription = post.frontmatter.description || post.excerpt;\n  if (post && post.frontmatter.public_tags) {\n    const allTags = post.frontmatter.public_tags;\n    let allTagString = allTags.slice(0, allTags.length - 1).join(\", \");\n    allTagString = allTagString + \", and \" + allTags[allTags.length - 1] + \"!\";\n    allTagString = allTagString.toLocaleLowerCase();\n    seoDescription += \"\\n\\nHop in for a maybe-useful, maybe-unhinged read about \" + allTagString;\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1, width=device-width\"\n  }), React.createElement(Seo, {\n    title: data.mdx.frontmatter.title,\n    description: seoDescription\n  }), \";\");\n};\nconst query = \"2744801607\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","a","img","pre","code","_provideComponents","components","React","href","src","alt","className","wrapper","MDXLayout","BlogPostTemplate","_ref","_data$site$siteMetada","data","location","post","mdx","siteTitle","site","siteMetadata","title","Layout","itemScope","itemType","Grid","item","xs","textAlign","Typography","variant","itemProp","frontmatter","marginBottom","date","TagChips","tags","public_tags","marginTop","MuiMarkdown","overrides","h1","component","h2","h3","gutterBottom","body","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","seoDescription","description","excerpt","allTags","allTagString","slice","length","join","toLocaleLowerCase","name","content","Seo"],"sourceRoot":""}