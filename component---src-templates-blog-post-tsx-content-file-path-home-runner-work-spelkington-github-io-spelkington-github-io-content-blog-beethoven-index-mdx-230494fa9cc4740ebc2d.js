"use strict";(self.webpackChunkchaotic_good_software_blog=self.webpackChunkchaotic_good_software_blog||[]).push([[905],{7259:function(e,t,n){n.r(t),n.d(t,{Head:function(){return f},default:function(){return u}});var o=n(1151),a=n(7294);function r(e){const t=Object.assign({p:"p",a:"a",blockquote:"blockquote",h2:"h2"},(0,o.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"TODO: Introduction"),"\n",a.createElement(t.p,null,"From the ",a.createElement(t.a,{href:"https://devpost.com/software/beethoven-t9ud86"},"original submission"),":"),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.h2,null,"Inspiration"),"\n",a.createElement(t.p,null,"Spencer, one of our team members, has a parent who is hearing-impaired and another that provides live, remote, ver batem transcription services for deaf and hard-of-hearing undergraduate, Ph.D., and Executive MBA students across the nation. Dan and Joseph, two of our other members, work for Sorenson Communications making video calling and other applications for the deaf community. We noticed that, for deaf students who would prefer live captioning in their lectures, there is no one-stop solution for both audio streaming and live captioning. We created Beethoven, an application for quick and accurate transcription in the classroom, to solve this."),"\n",a.createElement(t.h2,null,"Functionality"),"\n",a.createElement(t.p,null,"Put simply, Beethoven will pair two devices together - an audio input and a screen output - and stream captioning from one device to the other in real time. The student can put one device at the front of the class for the clearest possible audio, and then position another next to them to read live captioning of the lecture and dialog as if it was the Closed Captioning on a television show or movie. This can either be done through Google Cloud transcription services or a live CART interpreter, depending on the level of accuracy desired and resources available."),"\n",a.createElement(t.h2,null,"Development Process"),"\n",a.createElement(t.p,null,"The application is split into three main parts - the audio input, the transcription service, and the screen output. First, the audio is captured by the audio input device. From there, it goes to either the Google Cloud voice transcriber, or a live CART interpreter. This happens through Google Cloud Services or peer-to-peer WebRTC, respectively. Once complete, the text will be sent to both our server’s backend to be compiled into a transcript and send to the screen output device, placed in front of the student, where a stream of the captioning is displayed."),"\n",a.createElement(t.h2,null,"What’s next for Beethoven"),"\n",a.createElement(t.p,null,"Moving forward, we’d like to fully implement the CART reporting features of the application. The P2P handshaking feature has a lot of improvements that can be made. Once finished, we’d like to reach out to the deaf and CART communities to get their feedback on the product."),"\n"))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)},l=n(5725),c=n(3972),s=n(4802),h=n(6625),p=n(1619),m=n(8738);const d=e=>{var t;let{data:n,location:o}=e;const r=n.mdx,i=(null===(t=n.site.siteMetadata)||void 0===t?void 0:t.title)||"Title";return a.createElement(p.Z,{location:o,title:i},a.createElement("article",{className:"blog-post",itemScope:!0,itemType:"http://schema.org/Article"},a.createElement("header",null,a.createElement(l.ZP,{item:!0,xs:12,textAlign:"center"},a.createElement(c.Z,{variant:"h2",itemProp:"headline"},r.frontmatter.title),a.createElement(c.Z,{variant:"subtitle2",marginBottom:"2rem"},r.frontmatter.date),a.createElement(h.Z,{tags:r.frontmatter.public_tags}))),a.createElement("section",{itemProp:"articleBody"},a.createElement(l.ZP,{item:!0,xs:12,marginTop:3},a.createElement(s.ZP,{overrides:{h1:{component:c.Z,props:{variant:"h3"}},h2:{component:c.Z,props:{variant:"h4"}},h3:{component:c.Z,props:{variant:"h5"}},p:{component:c.Z,props:{variant:"body1",gutterBottom:!1}}}},r.body)))))};function u(e){return a.createElement(d,e,a.createElement(i,e))}const f=e=>{let{data:t}=e;const n=t.mdx;let o=n.frontmatter.description||n.excerpt;if(n&&n.frontmatter.public_tags){const e=n.frontmatter.public_tags;let t=e.slice(0,e.length-1).join(", ");t=t+", and "+e[e.length-1]+"!",t=t.toLocaleLowerCase(),o+="\n\nHop in for a maybe-useful, maybe-unhinged read about "+t}return a.createElement(a.Fragment,null,a.createElement("meta",{name:"viewport",content:"initial-scale=1, width=device-width"}),a.createElement(m.Z,{title:t.mdx.frontmatter.title,description:o}),";")}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-home-runner-work-spelkington-github-io-spelkington-github-io-content-blog-beethoven-index-mdx-230494fa9cc4740ebc2d.js.map